<?php

namespace ContainerUT4XX63;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_FLytKService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator._fLyt_k' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator._fLyt_k'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'kernel::registerContainerConfiguration' => ['privates', '.service_locator.zHyJIs5.kernel::registerContainerConfiguration()', 'get_ServiceLocator_ZHyJIs5_KernelregisterContainerConfigurationService', true],
            'App\\Kernel::registerContainerConfiguration' => ['privates', '.service_locator.zHyJIs5.kernel::registerContainerConfiguration()', 'get_ServiceLocator_ZHyJIs5_KernelregisterContainerConfigurationService', true],
            'kernel::loadRoutes' => ['privates', '.service_locator.zHyJIs5.kernel::loadRoutes()', 'get_ServiceLocator_ZHyJIs5_KernelloadRoutesService', true],
            'App\\Kernel::loadRoutes' => ['privates', '.service_locator.zHyJIs5.kernel::loadRoutes()', 'get_ServiceLocator_ZHyJIs5_KernelloadRoutesService', true],
            'App\\Controller\\OrdersController::create' => ['privates', '.service_locator.J8v1vv1.App\\Controller\\OrdersController::create()', 'getOrdersControllercreateService', true],
            'App\\Controller\\OrdersController::updateStatus' => ['privates', '.service_locator.UTPSXD3.App\\Controller\\OrdersController::updateStatus()', 'getOrdersControllerupdateStatusService', true],
            'App\\Controller\\UsersController::getUserOrders' => ['privates', '.service_locator.13jsxUt.App\\Controller\\UsersController::getUserOrders()', 'getUsersControllergetUserOrdersService', true],
            'App\\Controller\\UsersController::store' => ['privates', '.service_locator.u5ZbMAh.App\\Controller\\UsersController::store()', 'getUsersControllerstoreService', true],
            'kernel:registerContainerConfiguration' => ['privates', '.service_locator.zHyJIs5.kernel::registerContainerConfiguration()', 'get_ServiceLocator_ZHyJIs5_KernelregisterContainerConfigurationService', true],
            'kernel:loadRoutes' => ['privates', '.service_locator.zHyJIs5.kernel::loadRoutes()', 'get_ServiceLocator_ZHyJIs5_KernelloadRoutesService', true],
            'App\\Controller\\OrdersController:create' => ['privates', '.service_locator.J8v1vv1.App\\Controller\\OrdersController::create()', 'getOrdersControllercreateService', true],
            'App\\Controller\\OrdersController:updateStatus' => ['privates', '.service_locator.UTPSXD3.App\\Controller\\OrdersController::updateStatus()', 'getOrdersControllerupdateStatusService', true],
            'App\\Controller\\UsersController:getUserOrders' => ['privates', '.service_locator.13jsxUt.App\\Controller\\UsersController::getUserOrders()', 'getUsersControllergetUserOrdersService', true],
            'App\\Controller\\UsersController:store' => ['privates', '.service_locator.u5ZbMAh.App\\Controller\\UsersController::store()', 'getUsersControllerstoreService', true],
        ], [
            'kernel::registerContainerConfiguration' => '?',
            'App\\Kernel::registerContainerConfiguration' => '?',
            'kernel::loadRoutes' => '?',
            'App\\Kernel::loadRoutes' => '?',
            'App\\Controller\\OrdersController::create' => '?',
            'App\\Controller\\OrdersController::updateStatus' => '?',
            'App\\Controller\\UsersController::getUserOrders' => '?',
            'App\\Controller\\UsersController::store' => '?',
            'kernel:registerContainerConfiguration' => '?',
            'kernel:loadRoutes' => '?',
            'App\\Controller\\OrdersController:create' => '?',
            'App\\Controller\\OrdersController:updateStatus' => '?',
            'App\\Controller\\UsersController:getUserOrders' => '?',
            'App\\Controller\\UsersController:store' => '?',
        ]);
    }
}
