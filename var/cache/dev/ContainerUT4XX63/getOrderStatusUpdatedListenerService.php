<?php

namespace ContainerUT4XX63;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getOrderStatusUpdatedListenerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'App\EventListener\OrderStatusUpdatedListener' shared autowired service.
     *
     * @return \App\EventListener\OrderStatusUpdatedListener
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/src/EventListener/OrderStatusUpdatedListener.php';
        include_once \dirname(__DIR__, 4).'/src/Service/Notification/NotificationService.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/notifier/NotifierInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/notifier/Notifier.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/notifier/Channel/ChannelPolicyInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/notifier/Channel/ChannelPolicy.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/notifier/Recipient/RecipientInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/notifier/Recipient/EmailRecipientInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/notifier/Recipient/SmsRecipientInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/notifier/Recipient/EmailRecipientTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/notifier/Recipient/SmsRecipientTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/notifier/Recipient/Recipient.php';

        $a = new \Symfony\Component\Notifier\Notifier(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'browser' => ['privates', 'notifier.channel.browser', 'getNotifier_Channel_BrowserService', true],
            'chat' => ['privates', 'notifier.channel.chat', 'getNotifier_Channel_ChatService', true],
            'sms' => ['privates', 'notifier.channel.sms', 'getNotifier_Channel_SmsService', true],
            'email' => ['privates', 'notifier.channel.email', 'getNotifier_Channel_EmailService', true],
            'push' => ['privates', 'notifier.channel.push', 'getNotifier_Channel_PushService', true],
            'desktop' => ['privates', 'notifier.channel.desktop', 'getNotifier_Channel_DesktopService', true],
        ], [
            'browser' => 'Symfony\\Component\\Notifier\\Channel\\BrowserChannel',
            'chat' => 'Symfony\\Component\\Notifier\\Channel\\ChatChannel',
            'sms' => 'Symfony\\Component\\Notifier\\Channel\\SmsChannel',
            'email' => 'Symfony\\Component\\Notifier\\Channel\\EmailChannel',
            'push' => 'Symfony\\Component\\Notifier\\Channel\\PushChannel',
            'desktop' => 'Symfony\\Component\\Notifier\\Channel\\DesktopChannel',
        ]), new \Symfony\Component\Notifier\Channel\ChannelPolicy(['urgent' => ['email'], 'high' => ['email'], 'medium' => ['email'], 'low' => ['email']]));
        $a->addAdminRecipient(new \Symfony\Component\Notifier\Recipient\Recipient('admin@example.com', ''));

        return $container->privates['App\\EventListener\\OrderStatusUpdatedListener'] = new \App\EventListener\OrderStatusUpdatedListener(($container->privates['logger'] ?? self::getLoggerService($container)), new \App\Service\Notification\NotificationService($a));
    }
}
